input {
  jdbc {
    jdbc_driver_class => "com.mysql.jdbc.Driver"
    jdbc_driver_library => "/usr/share/logstash/logstash-core/lib/jars/mysql-connector-java.jar"
    jdbc_connection_string => "jdbc:mysql://mysql:3306/baha"
    jdbc_user => "root"
    jdbc_password => "example"
    schedule => "* * * * *"  # 每分鐘執行一次
    statement => "SELECT r.rank_day, r.kanban_id, k.kanban_name, c.class_name, r.ranking, r.hot FROM ranking r JOIN kanban k ON r.kanban_id = k.kanban_id JOIN kanban_class c ON c.class_id = k.class_id;"


    type => "jdbc"

    # 是否要記錄上次執行的結尾， 如果設置 true 則會參考 tracking_column 所指定的欄位及值記錄留存下，並存放至 last_run_metadata_path 位置的檔案中。
    record_last_run => "true"

    # 是否要自定義擷取 column 的值,如果 record_last_run 為 true ,可以自定 track 的 column 名稱，否則記錄的是 timestamp .
    use_column_value => "true"

    # 如果 use_column_value 為 true ,此欄位必須是漸增（Auto Increment). 一般是mysql Primary Key
    tracking_column => "id"

    # 記錄位置的路徑， 若是要重置讀取位置，建議要清空這個檔案及刪除舊索引
    last_run_metadata_path => "/etc/logstash/conf.d/last_id"

    # 是否清除 last_run_metadata_path 的記錄,如果為 true 表示每次都是自頭開始查詢所有值
    clean_run => "false"

    #是否將欄位名 (column) 名稱轉成小寫
    lowercase_column_names => "false"
  }
}

filter {
    
  date {
       match => ["created_at", "MMMM d'th' yyyy, HH:mm:ss.SSS", "MMMM dd'th' yyyy, HH:mm:ss.SSS","MMMM d'st' yyyy, HH:mm:ss.SSS","MMMM dd'st' yyyy, HH:mm:ss.SSS", "MMMM d'nd' yyyy, HH:mm:ss.SSS", "MMMM dd'nd' yyyy, HH:mm:ss.SSS", "MMMM d'rd' yyyy, HH:mm:ss.SSS", "MMMM dd'rd' yyyy, HH:mm:ss.SSS", "yyyy-MM-dd HH:mm:ss,SSS","ISO8601"]
       #timezone => "Asia/Taipei"
       timezone => "UTC"
       target => "@timestamp"
   }

}


output {
    # 输出到elasticsearch的配置
    elasticsearch {
        hosts => ["elasticsearch:9200"]
	user => "root"
        password => "example"
        index => "[baha-ranking]-%{+YYYY.MM.dd}"

        document_id => "%{rank_day}-%{kanban_id}"
    }

    stdout {
        codec => json_lines
    }
}
